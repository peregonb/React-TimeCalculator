{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","clearValue","setState","valueInput","valueHidden","ifOperator","operator","valueHistory","timeFunc","timeFuncClass","hourDisable","minuteDisable","equalDisable","error","scrollEnd","newRef","current","ifDot","str","m","regex","arr","exec","index","lastIndex","push","length","number","num","parseFloat","matched","toString","match","baseFunc","state","parseInt","dot","mathOperator","op","statement","math","equal","ifAny","transformExpression","expression","console","log","split","firstValue","secondValue","re","arr1","arr2","secondsFirst","secondsSecond","toStatement","hours","minutes","toDate","elem","scrollLeft","scrollWidth","ifHour","ifMinute","hour","minute","addClass","e","target","classList","add","targetClass","removeClass","el","remove","buttonClick","setTimeout","React","createRef","window","this","className","ref","readOnly","type","value","onClick","getAttribute","innerHTML","Component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91c0f624.chunk.js","sourcesContent":["import React from \"react\";\nimport * as math from 'mathjs';\nimport \"./App.scss\";\nimport {expression} from \"mathjs\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            valueInput: 0,\n            valueHidden: 0,\n            ifOperator: false,\n            operator: null,\n            valueHistory: 0,\n            timeFunc: false,\n            targetClass: null,\n            timeFuncClass: \"\",\n            hourDisable: false,\n            minuteDisable: false,\n            equalDisable: false,\n            error: \"\"\n        };\n        this.newRef = React.createRef();\n    };\n\n\n    clearValue = () => {\n        this.setState({\n            valueInput: 0,\n            valueHidden: 0,\n            ifOperator: false,\n            operator: null,\n            valueHistory: 0,\n            timeFunc: false,\n            timeFuncClass: \"\",\n            hourDisable: false,\n            minuteDisable: false,\n            equalDisable: false,\n            error: \"\"\n        });\n\n        this.scrollEnd(this.newRef.current);\n    };\n\n\n    ifDot = (str) => {\n        const regex = /\\W/g;\n        let m;\n        let arr = [];\n\n        while ((m = regex.exec(str)) !== null) {\n            if (m.index === regex.lastIndex) {\n                regex.lastIndex++;\n            }\n            arr.push(m);\n            return arr.length;\n        }\n\n    };\n\n    number = num => {\n        let number = parseFloat(num);\n        let matched = (num) => {\n            if (num.toString().match(/0./) === null) {\n                return false\n            } else return num.match(/0./).length\n        };\n\n        let baseFunc = () => {\n            if (number === 0 && !this.state.valueInput) {\n                this.setState({\n                    valueInput: num,\n                });\n            } else if (parseInt(this.state.valueInput) === 0 && !matched(this.state.valueInput)) {\n                this.setState({\n                    valueInput: num,\n                });\n            } else if (matched(this.state.valueInput)) {\n                this.setState({\n                    valueInput: this.state.valueInput + num,\n                });\n            } else {\n                this.setState({\n                    valueInput: this.state.valueInput + num,\n                });\n            }\n        };\n\n        if (this.state.ifOperator === false) {\n            baseFunc();\n        } else {\n            baseFunc();\n            this.setState({\n                valueInput: number,\n                ifOperator: false,\n                hourDisable: false,\n                minuteDisable: false\n            });\n        }\n\n        this.scrollEnd(this.newRef.current);\n    };\n    dot = () => {\n        if (!this.ifDot(this.state.valueInput)) {\n            this.setState({\n                valueInput: this.state.valueInput + \".\"\n            });\n        }\n        this.scrollEnd(this.newRef.current);\n    };\n\n    mathOperator = (op) => {\n        if (this.state.valueHidden === 0) {\n            this.setState({\n                valueHidden: this.state.valueInput,\n                ifOperator: true,\n                operator: op,\n            });\n        } else {\n            let statement = math.evaluate(parseFloat(this.state.valueHidden) + this.state.operator + parseFloat(this.state.valueInput));\n            this.setState({\n                valueHidden: statement,\n                valueInput: statement,\n                ifOperator: true,\n                valueHistory: statement,\n                operator: op,\n                equalDisable: false\n            });\n\n        }\n        this.scrollEnd(this.newRef.current);\n    };\n\n    equal = () => {\n        if (this.state.timeFunc === false) {\n            let statement = math.evaluate(parseFloat(this.state.valueHidden) + this.state.operator + parseFloat(this.state.valueInput));\n            this.setState({\n                valueHidden: 0,\n                valueInput: statement,\n                ifOperator: false,\n                valueHistory: statement,\n                operator: null\n            });\n            if (this.state.operator === '/' && parseFloat(this.state.valueInput) === 0) {\n                this.setState({error: \"ну, ты шалун)\"})\n            }\n        } else {\n            if (this.state.timeFunc === true && !this.ifAny(this.state.valueInput)) {\n                this.setState({error: \"Введи переменную часа или минуты\"})\n            }\n            else {\n                let transformExpression = (expression) => {\n                    console.log(expression)\n                    if (expression.match(/[H]/) && expression.match(/[M]/)) {\n                        let re = /[M]/;\n                        let arr = expression.split(re);\n                        if (arr[1] === \"\") {\n                            return expression;\n                        } else {\n                            return arr[1] + arr[0] + \"M\"\n                        }\n                    } else if (!expression.match(/[H]/) && expression.match(/[M]/)) {\n                        return \"0H\" + expression\n                    } else if (expression.match(/[H]/) && !expression.match(/[M]/)) {\n                        return expression + \"M\"\n                    } else {\n                        return this.setState({equalDisable: true});\n                    }\n                };\n                let toStatement = (firstValue, secondValue) => {\n                    let re = /[HM]/;\n                    let arr1 = firstValue.split(re);\n                    let arr2 = secondValue.split(re);\n                    let secondsFirst = (+arr1[0]) * 60 * 60 + (+arr1[1]) * 60;\n                    let secondsSecond = (+arr2[0]) * 60 * 60 + (+arr2[1]) * 60;\n                    return math.evaluate(parseInt(secondsFirst) + this.state.operator + parseInt(secondsSecond));\n                };\n                let toDate = (num) => {\n                    let hours = parseInt((num / 60) / 60);\n                    let minutes = num / 60 - (hours * 60);\n                    if (hours === 0 && minutes !== 0) {\n                        return minutes + \"M\"\n                    } else if (minutes === 0 && hours !== 0) {\n                        return hours + \"H\"\n                    } else if (minutes === 0 && hours === 0) {\n                        return 0;\n                    } else {\n                        return hours + \"H\" + minutes + \"M\"\n                    }\n                };\n\n                let statement = toStatement(transformExpression(this.state.valueHidden), transformExpression(this.state.valueInput));\n\n                this.setState({\n                    // valueHidden: this.state.valueInputHistory,\n                    valueInput: toDate(statement),\n                    // valueHistory: his,\n                   equalDisable: true,\n                    error: \"\"\n                });\n            }\n        }\n\n\n        this.scrollEnd(this.newRef.current);\n    };\n\n    scrollEnd = (elem) => {\n        elem.scrollLeft = elem.scrollWidth\n    };\n\n    ifHour = (num) => {\n        if (num.toString().match(/H/) === null) {\n            return false\n        } else {\n            return num.toString().match(/H/).length\n        }\n    };\n    ifMinute = (num) => {\n        if (num.toString().match(/M/) === null) {\n            return false\n        } else return num.toString().match(/M/).length\n    };\n    ifAny = num => {\n        if (num.toString().match(/[HM]/) === null) {\n            return false\n        } else return num.toString().match(/[HM]/).length\n    };\n\n    hour = () => {\n        if (!this.ifHour(this.state.valueInput)) {\n            this.setState({\n                valueInput: this.state.valueInput + \"H\",\n                timeFunc: true,\n                timeFuncClass: \"time\",\n                hourDisable: true\n            });\n        }\n    };\n\n    minute = () => {\n        if (!this.ifMinute(this.state.valueInput)) {\n            this.setState({\n                valueInput: this.state.valueInput + \"M\",\n                timeFunc: true,\n                timeFuncClass: \"time\",\n                minuteDisable: true\n            });\n        }\n    };\n\n\n    addClass = (e) => {\n        e.target.classList.add('active');\n        this.setState({\n            targetClass: e.target\n        });\n    };\n    removeClass = (el) => {\n        if (el) {\n            el.classList.remove('active');\n        }\n    };\n    buttonClick = (e) => {\n        this.addClass(e);\n        setTimeout(() => {\n            this.removeClass(this.state.targetClass);\n            this.setState({targetClass: null});\n        }, 100)\n    };\n\n\n    render() {\n        window.state = this.state;\n        return (\n            <div className={\"App \" + this.state.timeFuncClass}>\n                <span className=\"errorMessage\">{this.state.error}</span>\n                <div className=\"input\">{this.state.valueInput}</div>\n                <input ref={this.newRef} readOnly type=\"text\" className=\"output\" value={this.state.valueHistory}/>\n                <div className=\"section\">\n                    <div className=\"button\" onClick={(e) => {\n                        this.clearValue();\n                        this.buttonClick(e)\n                    }}>\n                        C\n                    </div>\n                    <div className={this.state.hourDisable ? \"button disabled\" : \"button\"} onClick={(e) => {\n                        this.hour();\n                        this.buttonClick(e)\n                    }}>H\n                    </div>\n                    <div className={this.state.minuteDisable ? \"button disabled\" : \"button\"} onClick={(e) => {\n                        this.minute();\n                        this.buttonClick(e)\n                    }}>M\n                    </div>\n                    <div className=\"button ifTimeDisable\" operator=\"/\" onClick={e => {\n                        this.mathOperator(e.target.getAttribute(\"operator\"));\n                        this.buttonClick(e)\n                    }}>÷\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.number(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>\n                        7\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.number(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>\n                        8\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.number(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>\n                        9\n                    </div>\n                    <div className=\"button ifTimeDisable\" operator=\"*\" onClick={e => {\n                        this.mathOperator(e.target.getAttribute(\"operator\"));\n                        this.buttonClick(e)\n                    }}>×\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.number(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>\n                        4\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.number(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>\n                        5\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.number(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>\n                        6\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.mathOperator(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>-\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.number(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>\n                        1\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.number(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>\n                        2\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.number(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>\n                        3\n                    </div>\n                    <div className=\"button\" onClick={e => {\n                        this.mathOperator(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>+\n                    </div>\n                    <div className=\"button double\" onClick={e => {\n                        this.number(e.target.innerHTML);\n                        this.buttonClick(e)\n                    }}>0\n                    </div>\n                    <div className=\"button ifTimeDisable\" onClick={(e) => {\n                        this.dot();\n                        this.buttonClick(e)\n                    }}>,\n                    </div>\n                    <div className={this.state.equalDisable ? \"button disabled\" : \"button\"} onClick={(e) => {\n                        this.equal();\n                        this.buttonClick(e)\n                    }}>=\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n// TODO зафиксить залипание addclass\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}