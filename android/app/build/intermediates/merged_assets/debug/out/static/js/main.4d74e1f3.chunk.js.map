{"version":3,"sources":["assets/img/backspase.svg","assets/img/settings.svg","components/Calculator/Button.jsx","components/Settings/Settings.jsx","components/Calculator/Calculator.jsx","index.js"],"names":["module","exports","Button","classList","value","onClick","className","trim","e","persist","target","add","setTimeout","remove","buttonClick","openPopup","Calculator","useState","inputValue","setInputValue","prevValue","setPrevValue","outputValue","setOutputValue","historyValue","setHistoryValue","operator","setOperator","error","setError","equalDisabled","setEqualDisabled","operatorDisabled","setOperatorDisabled","backspaceAndOperatorDisabled","setBackspaceAndOperatorDisabled","useEffect","console","table","numberClick","num","numbers","numbersTransformed","parseInt","toString","transform","match","split","concat","length","arrNumbers","arr1","Array","from","result","arr","index","newItem","slice","join","operatorClick","op","equalClick","convertToMinutes","hours","minutes","math","Math","floor","convertToExpression","num1","num2","minutesResult","readOnly","placeholder","src","backspace","alt","spliced","backspaceClick","Settings","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d74e1f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backspase.b9248099.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.e9ef167f.svg\";","import React from \"react\";\n\nexport const Button = ({classList, value, onClick}) => {\n    const buttonClick = e => {\n        e.persist();\n        e.target.classList.add('active');\n        setTimeout(() => e.target.classList.remove('active'), 70);\n    }\n\n    return (\n        <div className={`button ${classList ? classList : ''}`.trim()}\n             onClick={e => {\n                 buttonClick(e);\n                 onClick();\n             }}>\n            {value}\n        </div>\n    )\n};","import React from \"react\";\n\nexport default ({openPopup}) => {\n    return (\n        <div className={`options${openPopup ? '' : ' hidden'}`}>настройки </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport backspace from \"../../assets/img/backspase.svg\";\nimport settingsImg from \"../../assets/img/settings.svg\";\nimport {Button} from \"./Button\";\nimport * as math from 'mathjs';\nimport Settings from \"../Settings/Settings\";\n\nexport const Calculator = () => {\n    const pressedClassName = \" pressed\";\n\n    let [inputValue, setInputValue] = useState(\"\");\n    let [prevValue, setPrevValue] = useState(\"\");\n    let [outputValue, setOutputValue] = useState(\"\");\n    let [historyValue, setHistoryValue] = useState(\"\");\n    let [operator, setOperator] = useState(\"\");\n    let [error, setError] = useState(\"\");\n    let [openPopup, setOpenPopup] = useState(false);\n    let [equalDisabled, setEqualDisabled] = useState(\"\");\n    let [operatorDisabled, setOperatorDisabled] = useState(pressedClassName);\n    let [backspaceAndOperatorDisabled, setBackspaceAndOperatorDisabled] = useState(\"\");\n\n    useEffect(() => {\n        console.table({\n            inputValue,\n            prevValue,\n            outputValue,\n            historyValue,\n            operator,\n            error,\n            equalDisabled,\n            operatorDisabled,\n            backspaceAndOperatorDisabled\n        })\n    }, [inputValue, prevValue, outputValue, historyValue, operator, error, equalDisabled, operatorDisabled, backspaceAndOperatorDisabled]);\n\n    const insert = (arr, index, newItem) => [\n        ...arr.slice(0, index),\n        newItem,\n        ...arr.slice(index)\n    ];\n\n    const numberClick = (num) => {\n        if (!(inputValue === \"000\" && num === \"0\")) {\n            setError(\"\");\n            setBackspaceAndOperatorDisabled(\"\");\n            setOperatorDisabled(\"\");\n            let numbers;\n            numbers = inputValue.match(/[:]/) ? (inputValue.split(/[:]/)[0].concat(inputValue.split(/[:]/)[1])) + num : inputValue + num;\n            let transform = (num) => parseInt(num).toString(),\n                numbersTransformed = transform(numbers);\n            if (numbersTransformed.length < 9) {\n                setInputValue(numbers);\n                let arrNumbers;\n                arrNumbers = () => {\n                    if (numbersTransformed.length === 1) {\n                        return \"00\" + numbersTransformed;\n                    } else if (numbersTransformed.length === 2) {\n                        return \"0\" + numbersTransformed;\n                    } else if (numbersTransformed.length >= 3) {\n                        return numbersTransformed;\n                    }\n                };\n                let arr1 = Array.from(arrNumbers());\n                let result = insert(arr1, arr1.length - 2, \":\").join('');\n                setOutputValue(result);\n            } else {\n                setError(\"Maximum 8 digits accepted\")\n            }\n        }\n\n    };\n\n    const clear = () => {\n        setInputValue(\"\");\n        setOutputValue(\"\");\n        setHistoryValue(\"\");\n        setError(\"\");\n        setOperator(\"\");\n        setPrevValue(\"\");\n        setEqualDisabled(\"\");\n        setOperatorDisabled(pressedClassName);\n        setBackspaceAndOperatorDisabled(\"\");\n    };\n\n    const backspaceClick = () => {\n        let spliced = outputValue.split(/[:]/)[0].concat(outputValue.split(/[:]/)[1]).slice(),\n            result,\n            length = spliced.length;\n\n        if (outputValue.length > 4) {\n            result = spliced.slice(0, length - 3) + \":\" + spliced.slice(length - 3, length - 1);\n        } else if (outputValue.length === 4) {\n            result = \"0:\" + spliced.slice(length - 3, length - 1);\n        } else if (outputValue.length === 3) {\n            result = \"0:\" + spliced.slice(length - 2, length - 1);\n        } else if (outputValue.length <= 2) {\n            result = \"\"\n        }\n        setOutputValue(result);\n        setInputValue(result);\n    };\n\n    useEffect(() => {\n        setPrevValue(historyValue + \" \" + operator);\n    }, [historyValue, operator]);\n\n    const operatorClick = (op) => {\n        if (outputValue !== \"\") {\n            setInputValue(\"\");\n            setOperator(op);\n            setOutputValue(\"\");\n            setHistoryValue(outputValue);\n            setEqualDisabled(\"\");\n\n            equalClick();\n        } else {\n            setOperator(op);\n        }\n    };\n\n    const convertToMinutes = (num) => {\n        let hours = num.split(/[:]/)[0];\n        let minutes = num.split(/[:]/)[1];\n        return parseInt(math.evaluate((parseInt(hours) * 60) + parseInt(minutes)));\n    };\n\n    const minutesResult = (num1, operator, num2) => {\n        return math.evaluate(parseInt(num1) + operator + parseInt(num2));\n    };\n\n    const convertToExpression = (num) => {\n        let hours = Math.floor(num / 60);\n        let minutes = num - hours * 60;\n        if (minutes.toString().length === 1) {\n            minutes = '0' + minutes;\n        }\n        return hours + \":\" + minutes;\n    };\n\n    const equalClick = () => {\n        if (operator !== \"\" && outputValue !== \"\") {\n            let result = convertToExpression(minutesResult(convertToMinutes(historyValue), operator, convertToMinutes(outputValue)));\n            if (result.match(/[-]/)) {\n                setError(\"Time couldn't be negative\");\n                setOutputValue('NaN');\n                setBackspaceAndOperatorDisabled(pressedClassName);\n                setInputValue(\"\");\n            } else {\n                setInputValue(convertToMinutes(result).toString());\n                setOutputValue(result);\n            }\n            setHistoryValue(\"\");\n            setOperator(\"\");\n            setEqualDisabled(pressedClassName);\n        }\n    };\n\n\n    return (\n        <>\n            <div className={`calculator${openPopup ? ' hidden': ''}`}>\n                {/*<img className=\"settings\" src={settingsImg} alt=\"settings\" onClick={() => {setOpenPopup(!openPopup)}}/>*/}\n                <span className=\"errorMessage\">{error}</span>\n                <span className=\"prevValue\">{prevValue}</span>\n                <input readOnly={true} placeholder={\"0:00\"} className=\"input big\" value={outputValue}/>\n                <div className=\"section\">\n                    <Button value=\"7\" onClick={() => {\n                        numberClick(\"7\")\n                    }}/>\n                    <Button value=\"8\" onClick={() => {\n                        numberClick(\"8\")\n                    }}/>\n                    <Button value=\"9\" onClick={() => {\n                        numberClick(\"9\")\n                    }}/>\n                    <Button classList={backspaceAndOperatorDisabled} value={<img src={backspace} alt={\"backspace\"}/>}\n                            onClick={() => {\n                                backspaceClick();\n                            }}/>\n                    <Button value=\"4\" onClick={() => {\n                        numberClick(\"4\")\n                    }}/>\n                    <Button value=\"5\" onClick={() => {\n                        numberClick(\"5\")\n                    }}/>\n                    <Button value=\"6\" onClick={() => {\n                        numberClick(\"6\")\n                    }}/>\n                    <Button classList={operatorDisabled + backspaceAndOperatorDisabled} value=\"-\" onClick={() => {\n                        operatorClick(\"-\")\n                    }}/>\n                    <Button value=\"1\" onClick={() => {\n                        numberClick(\"1\")\n                    }}/>\n                    <Button value=\"2\" onClick={() => {\n                        numberClick(\"2\")\n                    }}/>\n                    <Button value=\"3\" onClick={() => {\n                        numberClick(\"3\")\n                    }}/>\n                    <Button classList={operatorDisabled + backspaceAndOperatorDisabled} value=\"+\" onClick={() => {\n                        operatorClick(\"+\")\n                    }}/>\n                    <Button value=\"0\" classList=\"double\" onClick={() => {\n                        numberClick(\"0\")\n                    }}/>\n                    <Button value=\"C\" onClick={() => {\n                        clear();\n                    }}/>\n                    <Button classList={equalDisabled} value=\"=\" onClick={() => {\n                        equalClick();\n                    }}/>\n                </div>\n            </div>\n\n            <Settings openPopup={openPopup}/>\n        </>\n    )\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./assets/scss/App.scss\";\nimport {Calculator} from \"./components/Calculator/Calculator\";\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}